// Generated by gencpp from file vrep_common/simRosBreakForceSensor.msg
// DO NOT EDIT!


#ifndef VREP_COMMON_MESSAGE_SIMROSBREAKFORCESENSOR_H
#define VREP_COMMON_MESSAGE_SIMROSBREAKFORCESENSOR_H

#include <ros/service_traits.h>


#include <vrep_common/simRosBreakForceSensorRequest.h>
#include <vrep_common/simRosBreakForceSensorResponse.h>


namespace vrep_common
{

struct simRosBreakForceSensor
{

typedef simRosBreakForceSensorRequest Request;
typedef simRosBreakForceSensorResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct simRosBreakForceSensor
} // namespace vrep_common


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::vrep_common::simRosBreakForceSensor > {
  static const char* value()
  {
    return "b36b86ca13a59f09240c2d590a9babec";
  }

  static const char* value(const ::vrep_common::simRosBreakForceSensor&) { return value(); }
};

template<>
struct DataType< ::vrep_common::simRosBreakForceSensor > {
  static const char* value()
  {
    return "vrep_common/simRosBreakForceSensor";
  }

  static const char* value(const ::vrep_common::simRosBreakForceSensor&) { return value(); }
};


// service_traits::MD5Sum< ::vrep_common::simRosBreakForceSensorRequest> should match 
// service_traits::MD5Sum< ::vrep_common::simRosBreakForceSensor > 
template<>
struct MD5Sum< ::vrep_common::simRosBreakForceSensorRequest>
{
  static const char* value()
  {
    return MD5Sum< ::vrep_common::simRosBreakForceSensor >::value();
  }
  static const char* value(const ::vrep_common::simRosBreakForceSensorRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::vrep_common::simRosBreakForceSensorRequest> should match 
// service_traits::DataType< ::vrep_common::simRosBreakForceSensor > 
template<>
struct DataType< ::vrep_common::simRosBreakForceSensorRequest>
{
  static const char* value()
  {
    return DataType< ::vrep_common::simRosBreakForceSensor >::value();
  }
  static const char* value(const ::vrep_common::simRosBreakForceSensorRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::vrep_common::simRosBreakForceSensorResponse> should match 
// service_traits::MD5Sum< ::vrep_common::simRosBreakForceSensor > 
template<>
struct MD5Sum< ::vrep_common::simRosBreakForceSensorResponse>
{
  static const char* value()
  {
    return MD5Sum< ::vrep_common::simRosBreakForceSensor >::value();
  }
  static const char* value(const ::vrep_common::simRosBreakForceSensorResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::vrep_common::simRosBreakForceSensorResponse> should match 
// service_traits::DataType< ::vrep_common::simRosBreakForceSensor > 
template<>
struct DataType< ::vrep_common::simRosBreakForceSensorResponse>
{
  static const char* value()
  {
    return DataType< ::vrep_common::simRosBreakForceSensor >::value();
  }
  static const char* value(const ::vrep_common::simRosBreakForceSensorResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // VREP_COMMON_MESSAGE_SIMROSBREAKFORCESENSOR_H
